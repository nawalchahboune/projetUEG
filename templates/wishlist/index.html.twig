{% extends 'base.html.twig' %}

{% block title %}{{ wishlist.name }} - Liste de souhaits{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .shared-wishlist-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }
    
    .shared-header {
        background-color: #f9f9f9;
        padding: 2rem;
        border-radius: 8px;
        margin-bottom: 2rem;
        box-shadow: 0 3px 8px rgba(0,0,0,0.05);
        text-align: center;
        position: relative;
    }
    
    .shared-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #0f1d36;
        margin-bottom: 1rem;
    }
    
    .shared-description {
        color: #666;
        font-size: 1.1rem;
        max-width: 800px;
        margin: 0 auto 1.5rem;
    }
    
    .shared-meta {
        display: flex;
        justify-content: center;
        gap: 2rem;
        color: #777;
        font-size: 0.9rem;
    }
    
    .shared-meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .user-info {
        background-color: white;
        padding: 1rem 2rem;
        border-radius: 50px;
        display: inline-flex;
        align-items: center;
        gap: 1rem;
        margin: 1.5rem auto;
        box-shadow: 0 3px 8px rgba(0,0,0,0.05);
    }
    
    .user-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
    }
    
    .user-name {
        font-weight: 600;
        color: #0f1d36;
    }
    
    /* Items grid */
    .items-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 2rem;
    }
    
    .item-card {
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        overflow: hidden;
        background-color: white;
        box-shadow: 0 3px 8px rgba(0,0,0,0.05);
        display: flex;
        flex-direction: column;
        position: relative;
    }
    
    .item-image-container {
        position: relative;
        height: 180px;
        overflow: hidden;
    }
    
    .item-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    
    .item-card:hover .item-image {
        transform: scale(1.05);
    }
    
    .item-price {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background-color: #0f1d36;
        color: white;
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
    }
    .delete-btn {
     position: absolute;
     top: 1rem;
     left: 1rem; /* Changed from right to left */
     background-color: #c53030;
     color: white;
     padding: 0.4rem 0.8rem;
     border-radius: 20px;
     font-weight: 600;
     font-size: 0.9rem;
 }
    
    .item-status {
        position: absolute;
        top: 1rem;
        left: 1rem;
        padding: 0.3rem 0.7rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.8rem;
        z-index: 1;
    }
    
    .status-available {
        background-color: #e3f7e3;
        color: #2c7a2c;
    }
    
    .status-purchased {
        background-color: #ffe9e9;
        color: #c53030;
    }
    
    .purchased-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        pointer-events: none;
        z-index: 1;
    }
    
    .purchased-text {
        background-color: #c53030;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 5px;
        font-weight: 600;
        transform: rotate(-15deg);
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }
    
    .item-content {
        padding: 1.5rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }
    
    .item-name {
        font-size: 1.2rem;
        font-weight: 600;
        color: #0f1d36;
        margin-bottom: 0.5rem;
    }
    
    .item-description {
        color: #666;
        font-size: 0.95rem;
        margin-bottom: 1rem;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
        flex-grow: 1;
    }
    
    .item-priority {
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #eee;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .priority-label {
        font-size: 0.85rem;
        color: #777;
    }
    
    .priority-indicator {
        flex-grow: 1;
        height: 5px;
        background-color: #eee;
        border-radius: 3px;
        overflow: hidden;
    }
    
    .priority-bar {
        height: 100%;
        background-color: #0f1d36;
    }
    
    .priority-high .priority-bar {
        width: 100%;
    }
    
    .priority-medium .priority-bar {
        width: 60%;
    }
    
    .priority-low .priority-bar {
        width: 30%;
    }
    
    .item-action {
        margin-top: auto;
    }
    
    .purchase-btn {
        width: 100%;
        padding: 0.8rem;
        background-color: #0f1d36;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        gap: 0.5rem;
    }
    
    .purchase-btn:hover {
        background-color: #1a2e4c;
    }
    
    .purchase-btn.disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }
    
    .view-btn {
        width: 100%;
        padding: 0.8rem;
        background-color: white;
        color: #0f1d36;
        border: 1px solid #0f1d36;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        gap: 0.5rem;
        margin-top: 0.5rem;
    }
    
    .view-btn:hover {
        background-color: #f5f5f5;
    }
    
    .empty-wishlist {
        grid-column: 1 / -1;
        padding: 3rem;
        text-align: center;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 3px 8px rgba(0,0,0,0.05);
        margin-top: 2rem;
    }
    
    .empty-title {
        font-size: 1.5rem;
        color: #0f1d36;
        margin-bottom: 1rem;
    }
    
    .return-home {
        padding: 0.7rem 1.2rem;
        background-color: #0f1d36;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 1.5rem;
    }
    
    .return-home:hover {
        background-color: #1a2e4c;
    }
    
    .share-options {
        display: flex;
        justify-content: center;
        gap: 1rem;
        margin: 2rem 0;
    }
    
    .share-btn {
        padding: 0.7rem 1.2rem;
        background-color: white;
        border-radius: 5px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        border: 1px solid #ddd;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    
    .share-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 3px 8px rgba(0,0,0,0.1);
    }
    
    /* Button colors for different platforms */
    .share-facebook {
        color: #3b5998;
    }
    
    .share-twitter {
        color: #1da1f2;
    }
    
    .share-whatsapp {
        color: #25d366;
    }
    
    .share-email {
        color: #c53030;
    }
    
    .share-link {
        color: #0f1d36;
    }
</style>
{% endblock %}

{% block body %}
<div class="shared-wishlist-container">
    <div class="shared-header">
        <h1 class="shared-title">{{ wishlist.name }}</h1>
        
        <div class="user-info">
            {% if wishlist.owner.photo %}
                <img src="{{ asset('uploads/profile_photos/' ~ wishlist.owner.photo) }}" alt="{{ wishlist.owner.username }}" class="user-avatar">
            {% else %}
                <img src="{{ asset('images/default-avatar.jpg') }}" alt="{{ wishlist.owner.username }}" class="user-avatar">
            {% endif %}
            <span class="user-name">Liste de {{ wishlist.owner.firstName|default(wishlist.owner.username) }}</span>
        </div>
        
        <div class="shared-meta">
            <div class="shared-meta-item">
                <i class="fas fa-gift"></i>
                <span>{{ items|length }} cadeaux</span>
            </div>
            
            
        </div>
    </div>
    
    <div class="share-options">
 
  <button class="share-btn add-item-btn">
   <i class="fas fa-plus-circle"></i>
   <span>Add Item</span>
</button>
    </div>
    
    <div class="items-grid">
        {% if items|length > 0 %}
            {% for item in items %}
                <div class="item-card">
                    <div class="item-image-container">
                                
                        {% if item.price %}
                            <div class="item-price">{{ item.price|number_format(2, ',', ' ') }} €</div>
                        {% endif %}
                        
                              
     <button class="delete-btn">
      <i class="fas fa-trash"></i>
      <span>Delete</span>
  </button>
                        
                        {% if item.isPurchased|default(false) %}
                            <div class="purchased-overlay">
                                <div class="purchased-text">Déjà réservé</div>
                            </div>
                        {% endif %}
                    </div>
                    
                    <div class="item-content">
                        <h3 class="item-name">{{ item.name }}</h3>
                        <p class="item-description">{{ item.description|default('Aucune description disponible') }}</p>
                        
                        <div class="item-priority priority-{{ item.priority|default('medium')|lower }}">
                            <span class="priority-label">Priorité:</span>
                            <div class="priority-indicator">
                                <div class="priority-bar"></div>
                            </div>
                        </div>
                        
                        <div class="item-action">
                           
                            {% if item.url %}
                                <a href="{{ item.url }}" target="_blank" class="view-btn">
                                    <i class="fas fa-shopping-cart"></i> Voir en boutique
                                </a>
                                {% else %}
                                <p class="view-btn" > Aucun URL n'est fournie!</p>
                            {% endif %}
                        </div>
                    </div>
                </div>
            {% endfor %}
        {% else %}
            <div class="empty-wishlist">
                <h2 class="empty-title">Cette liste de souhaits est vide</h2>
                <p>Il n'y a actuellement aucun cadeau dans cette liste.</p>
                <a href="{{ path('app_home') }}" class="return-home">
                    <i class="fas fa-home"></i> Retour à l'accueil
                </a>
            </div>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Gestion du bouton de copie de lien
        const copyLinkBtn = document.getElementById('copy-link-btn');
        if (copyLinkBtn) {
            copyLinkBtn.addEventListener('click', function(e) {
                e.preventDefault();
                
                // Créer un input temporaire pour copier le lien actuel
                const tempInput = document.createElement('input');
                tempInput.value = window.location.href;
                document.body.appendChild(tempInput);
                tempInput.select();
                document.execCommand('copy');
                document.body.removeChild(tempInput);
                
                // Changer le texte du bouton temporairement
                const originalText = this.innerHTML;
                this.innerHTML = '<i class="fas fa-check"></i> <span>Lien copié!</span>';
                
                setTimeout(() => {
                    this.innerHTML = originalText;
                }, 2000);
            });
        }
        
        // Gestion des boutons de réservation
        const reserveButtons = document.querySelectorAll('.reserve-item-btn');
        reserveButtons.forEach(button => {
            button.addEventListener('click', function() {
                const itemId = this.getAttribute('data-item-id');
                const itemCard = this.closest('.item-card');
                const statusBadge = itemCard.querySelector('.item-status');
                
                // Demander confirmation
                if (confirm('Êtes-vous sûr de vouloir réserver ce cadeau? Les autres visiteurs sauront qu\'il est déjà pris.')) {
                    // Simuler une requête AJAX pour mettre à jour le statut
                    // Dans un cas réel, vous enverriez une requête à votre serveur
                    
                    // Ajouter l'overlay "Déjà réservé"
                    const imageContainer = itemCard.querySelector('.item-image-container');
                    const overlay = document.createElement('div');
                    overlay.className = 'purchased-overlay';
                    overlay.innerHTML = '<div class="purchased-text">Déjà réservé</div>';
                    imageContainer.appendChild(overlay);
                    
                    // Mettre à jour le statut
                    statusBadge.textContent = 'Réservé';
                    statusBadge.classList.remove('status-available');
                    statusBadge.classList.add('status-purchased');
                    
                    // Mettre à jour le bouton
                    this.innerHTML = '<i class="fas fa-lock"></i> Déjà réservé';
                    this.classList.add('disabled');
                    this.disabled = true;
                    
                    // Afficher un message de confirmation
                    alert('Merci! Ce cadeau a été marqué comme réservé. N\'oubliez pas de l\'acheter pour faire plaisir à ' + 
                          '{{ wishlist.owner.firstName|default(wishlist.owner.username) }}!');
                }
            });
        });
        
        // Gestion des boutons de partage sur les réseaux sociaux
        const shareButtons = document.querySelectorAll('.share-facebook, .share-twitter, .share-whatsapp, .share-email');
        shareButtons.forEach(button => {
            button.addEventListener('click', function() {
                const url = encodeURIComponent(window.location.href);
                const title = encodeURIComponent('{{ wishlist.name }} - Liste de souhaits');
                
                let shareUrl = '';
                
                if (this.classList.contains('share-facebook')) {
                    shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${url}`;
                } else if (this.classList.contains('share-twitter')) {
                    shareUrl = `https://twitter.com/intent/tweet?url=${url}&text=${title}`;
                } else if (this.classList.contains('share-whatsapp')) {
                    shareUrl = `https://wa.me/?text=${title}%20${url}`;
                } else if (this.classList.contains('share-email')) {
                    shareUrl = `mailto:?subject=${title}&body=Découvre cette liste de souhaits: ${url}`;
                }
                
                if (shareUrl) {
                    window.open(shareUrl, '_blank');
                }
            });
        });
    });
</script>
{% endblock %}