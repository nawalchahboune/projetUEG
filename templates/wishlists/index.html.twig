{# templates/wishlist/index.html.twig #}
{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Style pour centrer la popup */
        .share-popup {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .share-popup-content {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        /* Style pour alignement horizontal des wishlists */
        .wishlist-container {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            justify-content: flex-start;
        }

        .wishlist-card {
            flex: 0 0 auto;
            width: 340px;
            margin-bottom: 20px;
        }

        .hidden {
            display: none !important;
        }
    </style>
{% endblock %}

{% block title %}Mes listes de souhaits{% endblock %}

{% block body %}
<div class="container">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4>Mes listes de souhaits</h4>
        </div>
        <div>
            <a href="{{ path('app_wishlists_create') }}" class="btn btn-creer">Créer une nouvelle liste</a>
        </div>
    </div>

    {# Zone d'image avec augmentation de l'espace sous l'image pour pousser la zone vers le bas #}
    <div class="profile-header mb-4">
        <img src="{{ asset('images/gifts.jpg') }}" alt="cover pic" class="header-image">
        <div class="profile-pic-container">
            <img src="{{ asset('images/blank_prof_pic.jpg') }}" alt="Profile Picture" class="profile-pic">
        </div>
    </div>

    <div class="row-md-4 mb-4">
        {% if is_granted('ROLE_USER') %} 
            <h3>{{ app.user.username }}</h3> 
        {% endif %}
    </div>

    <div class="container" style="margin-top: 100px;"> {# Augmentation de l'espace entre l'image et la zone de boutons #}
        {% if wishlists is empty %}
            <div class="alert alert-info">Vous n'avez pas encore créé de liste de souhaits.</div>
        {% else %}
            <div class="wishlist-container">
               {% for wishlist in wishlists %}
    <div class="wishlist-card">
        <div class="card h-100 {% if wishlist.isExpired() %}card-expired{% endif %}">
            <div class="card-body d-flex flex-column h-100">

                {# Titre de la wishlist #}
                <h5 class="card-title mb-3">
                    {{ wishlist.name }}
                    {% if wishlist.isExpired() %}<span class="badge bg-secondary">Expirée</span>{% endif %}
                </h5>

                {# Zone contenant la date et les boutons #}
                <div class="mt-auto py-3">
                    <p class="card-text">
                        <strong>Date limite:</strong> 
                        <span class="{% if wishlist.isExpired() %}text-danger{% endif %}">
                            {{ wishlist.deadline ? wishlist.deadline|date('d/m/Y') : 'Non définie' }}
                        </span>
                    </p>
                </div>

                <!-- Wishlist Actions -->
                <div class="btn-group d-flex justify-content-between">
                    <a href="{{ path('app_wishlist_show', {'id': wishlist.id}) }}" class="btn btn-primary flex-fill me-1 text-center">
                        <i class="fas fa-eye"></i>
                    </a>
                    
                    {% if not wishlist.isExpired() %}
                        <a href="{{ path('app_wishlists_edit', {'id': wishlist.id}) }}" class="btn btn-warning flex-fill me-1 text-center">
                            <i class="fas fa-pencil-alt"></i>
                        </a>
                    {% else %}
                        <button class="btn btn-warning flex-fill me-1 text-center opacity-50" disabled>
                            <i class="fas fa-pencil-alt"></i>
                        </button>
                    {% endif %}
                    
                    <form method="post" action="{{ path('app_wishlist_delete_wishlist', {'id': wishlist.id}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette liste?');" style="display: inline;" class="flex-fill me-1">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ wishlist.id) }}">
                        <button type="submit" class="btn btn-supprimer w-100 text-center">
                            <i class="fas fa-trash"></i>
                        </button>
                    </form>
                    
                    {% if not wishlist.isExpired() %}
                        <button class="btn btn-creer flex-fill text-center share-wishlist-btn" data-id="{{ wishlist.id }}">
                            <i class="fas fa-share-alt"></i>
                        </button>
                    {% else %}
                        <button class="btn btn-creer flex-fill text-center opacity-50" disabled>
                            <i class="fas fa-share-alt"></i>
                        </button>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
{% endfor %}
            </div>
        {% endif %}
        <h4>Listes partagées avec moi</h4>
        {% if wishlistsIamCollaborator is empty %}
            <div class="alert alert-info">Aucune liste de souhaits partagée avec vous.</div>
        {% else %}
            <div class="row">
                {% for wishlist in wishlistsIamCollaborator %}
                    <div class="col-md-4 mb-4">
                        <div class="card h-100">
                            <div class="card-body d-flex flex-column">
                                <!-- Wishlist Title and Deadline -->
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h5 class="card-title mb-0">{{ wishlist.name }}</h5>
                                    <p class="card-text mb-0">
                                        Date limite: {{ wishlist.deadline ? wishlist.deadline|date('d/m/Y') : 'Non définie' }}
                                    </p>
                                </div>

                                <!-- Wishlist Actions -->
                                <div class="btn-group d-flex justify-content-between">
                                    <a href="{{ path('app_wishlist_show', {'id': wishlist.id}) }}" class="btn btn-primary flex-fill me-1 text-center">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="{{ path('app_wishlists_edit', {'id': wishlist.id}) }}" class="btn btn-warning flex-fill me-1 text-center">
                                        <i class="fas fa-pencil-alt"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    </div>

    <!-- Popups centralisés à l'extérieur de la structure des cartes -->
    {% for wishlist in wishlists %}
        <div id="share-popup-{{ wishlist.id }}" class="share-popup hidden">
            <div class="share-popup-content">
                <h2>Share Your Wishlist</h2>
                <p>Use the link below to share your wishlist with friends and family.</p>
                <input type="text" id="share-link-{{ wishlist.id }}" value="{{ url('app_wishlist_public', {'token': wishlist.publicToken}) }}" readonly class="form-control mb-2">
                <button class="btn btn-info copy-link-btn mb-2" data-id="{{ wishlist.id }}">Copy Link</button>
                <button class="btn btn-secondary close-popup-btn mb-3" data-id="{{ wishlist.id }}">Close</button>
                <div class="add-friends-container">
                    <h3>Share with Users</h3>
                    <div class="input-with-button d-flex mb-2">
                        <input 
                            type="text" 
                            id="friend-username-{{ wishlist.id }}" 
                            placeholder="Search username" 
                            class="friend-input form-control me-2" 
                            autocomplete="off"
                        >
                        <button 
                            type="button" 
                            class="btn btn-primary add-friend-btn" 
                            data-id="{{ wishlist.id }}"
                        >
                            <i class="fas fa-plus"></i>
                        </button>
                    </div>
                    
                    <!-- Conteneur pour les suggestions d'utilisateurs -->
                    <div 
                        id="user-suggestions-{{ wishlist.id }}" 
                        class="user-suggestions mt-2"
                    ></div>
                </div>
            </div>
        </div>
    {% endfor %}
</div>
{% endblock %}


{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const csrfTokenElement = document.querySelector('meta[name="csrf-token"]');
        const csrfToken = csrfTokenElement ? csrfTokenElement.getAttribute('content') : null;
    
        // Gestion des boutons de partage
        const shareButtons = document.querySelectorAll('.share-wishlist-btn');

        shareButtons.forEach(button => {
            button.addEventListener('click', function (event) {
                event.stopPropagation();
    
                // Masquer tous les autres popups
                const popups = document.querySelectorAll('.share-popup');
                popups.forEach(popup => {
                    popup.classList.add('hidden');
                });
    
                // Afficher le popup correspondant
                const wishlistId = this.getAttribute('data-id');
                const popup = document.getElementById('share-popup-' + wishlistId);
                popup.classList.remove('hidden');
            });
        });
    
        // Gestion des boutons de fermeture
        const closeButtons = document.querySelectorAll('.close-popup-btn');
        closeButtons.forEach(button => {
            button.addEventListener('click', function () {
                const wishlistId = this.getAttribute('data-id');
                const popup = document.getElementById('share-popup-' + wishlistId);
                popup.classList.add('hidden');
            });
        });
    
        // Gestion de la recherche d'utilisateurs
        const friendInputs = document.querySelectorAll('.friend-input');
        friendInputs.forEach(input => {
            let searchTimeout;
    
            input.addEventListener('input', function () {
                const searchValue = this.value.trim();
                const wishlistId = this.id.replace('friend-username-', '');
                const suggestionsContainer = document.getElementById(`user-suggestions-${wishlistId}`);
    
                clearTimeout(searchTimeout);
    
                if (searchValue.length < 2) {
                    suggestionsContainer.innerHTML = '';
                    return;
                }
    
                searchTimeout = setTimeout(() => {
                    fetch(`/api/users/search?query=${encodeURIComponent(searchValue)}`)
                        .then(response => response.json())
                        .then(users => {
                            suggestionsContainer.innerHTML = '';
    
                            if (users.length === 0) {
                                suggestionsContainer.innerHTML = '<p class="text-muted">Aucun utilisateur trouvé</p>';
                                return;
                            }
    
                            const suggestionsList = document.createElement('div');
                            suggestionsList.className = 'list-group';
    
                            users.forEach(user => {
                                const suggestionItem = document.createElement('a');
                                suggestionItem.href = '#';
                                suggestionItem.className = 'list-group-item list-group-item-action';
                                suggestionItem.innerHTML = `
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1">${user.username}</h5>
                                        <small>${user.email}</small>
                                    </div>
                                `;
    
                                suggestionItem.addEventListener('click', function (e) {
                                    e.preventDefault();
                                    input.value = user.username;
                                    suggestionsContainer.innerHTML = '';
                                });
    
                                suggestionsList.appendChild(suggestionItem);
                            });
    
                            suggestionsContainer.appendChild(suggestionsList);
                        })
                        .catch(error => {
                            console.error('Erreur lors de la recherche d\'utilisateurs:', error);
                            suggestionsContainer.innerHTML = '<p class="text-danger">Erreur de recherche</p>';
                        });
                }, 300);
            });
        });
    
        // Gestion du bouton d'ajout d'ami
        const addFriendButtons = document.querySelectorAll('.add-friend-btn');
        addFriendButtons.forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();
    
                const wishlistId = this.getAttribute('data-id');
                const inputField = document.getElementById(`friend-username-${wishlistId}`);
                const username = inputField.value.trim();
    
                if (!username) {
                    alert('Veuillez entrer un nom d\'utilisateur.');
                    return;
                }
    
                fetch('/api/wishlist/add-collaborator', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': csrfToken
                    },
                    body: JSON.stringify({
                        wishlistId: wishlistId,
                        username: username
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(`Collaborateur ajouté : ${data.username}`);
                            inputField.value = '';
                        } else {
                            alert(data.message || 'Erreur lors de l\'ajout du collaborateur.');
                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors de la requête :', error);
                        alert('Une erreur est survenue.');
                    });
            });
        });
    
        // Ajout du bouton de copie du lien
        const copyButtons = document.querySelectorAll('.copy-link-btn');
        copyButtons.forEach(button => {
            button.addEventListener('click', function() {
                const wishlistId = this.getAttribute('data-id');
                const linkInput = document.getElementById(`share-link-${wishlistId}`);
                
                linkInput.select();
                document.execCommand('copy');
                
                this.textContent = 'Copié !';
                setTimeout(() => {
                    this.textContent = 'Copy Link';
                }, 2000);
            });
        });
    
        // Fermeture des popups en cliquant à l'extérieur
        document.addEventListener('click', function (event) {
            const openPopups = document.querySelectorAll('.share-popup:not(.hidden)');
            openPopups.forEach(popup => {
                if (!popup.contains(event.target) &&
                    !event.target.closest('.share-wishlist-btn')) {
                    popup.classList.add('hidden');
                }
            });
        });
    });
</script>
{% endblock %}