{# templates/wishlist/index.html.twig #}
{% extends 'base.html.twig' %}


{% block title %}Mes listes de souhaits{% endblock %}

{% block body %}
<div class="container">

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h4>Mes listes de souhaits</h4>
    </div>
    <div>
        <a href="{{ path('app_wishlists_create') }}" class="btn btn-creer">Créer une nouvelle liste</a>
    </div>
</div>
<div class="profile-header">
    <img src="{{ asset('images/gifts.jpg') }}" alt="cover pic" class="header-image">
    <div class="profile-pic-container">
        <img src="{{ asset('images/blank_prof_pic.jpg') }}" alt="Profile Picture" class="profile-pic">
    </div>
</div>
{% if is_granted('ROLE_USER') %} <h3> {{ app.user.username }} </h3> {% endif %}



    {% if wishlists is empty %}
        <div class="alert alert-info">Vous n'avez pas encore créé de liste de souhaits.</div>
    {% else %}
        <div class="row">
            {% for wishlist in wishlists %}
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="card-title mb-0">{{ wishlist.name }}</h5>
                                <p class="card-text mb-0">
                                    Date limite: {{ wishlist.deadline ? wishlist.deadline|date('d/m/Y') : 'Non définie' }}
                                </p>
                            </div>
                            <p class="card-text">
                                {{ wishlist.items|length }} item(s)
                            </p>
<div class="card-body">
    <div class="d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">{{ wishlist.name }}</h5>
        <p class="card-text mb-0">
            Date limite: {{ wishlist.deadline ? wishlist.deadline|date('d/m/Y') : 'Non définie' }}
        </p>
    </div>
    <p class="card-text">
        {{ wishlist.items|length }} item(s)
    </p>
    
    <!-- Replace the button group with this new version -->
    <div class="d-flex justify-content-center gap-2">
        <a href="{{ path('app_wishlist_show', {'id': wishlist.id}) }}" class="btn btn-primary btn-icon">
            <i class="fas fa-eye"></i>
        </a>
        <a href="{{ path('app_wishlists_edit', {'id': wishlist.id}) }}" class="btn btn-warning btn-icon">
            <i class="fas fa-pencil-alt"></i>
        </a>
        <form method="post" action="{{ path('app_wishlist_delete_wishlist', {'id': wishlist.id}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette liste?');" style="display: inline;">
            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ wishlist.id) }}">
            <button type="submit" class="btn btn-supprimer btn-icon">
                <i class="fas fa-trash"></i>
            </button>
        </form>
        <a href="#" class="btn btn-creer btn-icon">
            <i class="fas fa-share-alt"></i>
        </a>
    </div>
</div>
                        </div>
                    </div>
                </div>
                
            {% endfor %}
            
            
        </div>
    {% endif %}
</div>
{% endblock %}



{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Sélectionner tous les boutons de partage
        const shareButtons = document.querySelectorAll('.share-wishlist-btn');
        
        // Ajouter un écouteur d'événement à chaque bouton de partage
        shareButtons.forEach(button => {
            button.addEventListener('click', function() {
                const wishlistId = this.getAttribute('data-id');
                const popup = document.getElementById('share-popup-' + wishlistId);
                popup.classList.remove('hidden');
            });
        });
        
        // Gérer la fermeture des popups
        const closeButtons = document.querySelectorAll('.close-popup-btn');
        closeButtons.forEach(button => {
            button.addEventListener('click', function() {
                const wishlistId = this.getAttribute('data-id');
                const popup = document.getElementById('share-popup-' + wishlistId);
                popup.classList.add('hidden');
            });
        });
        
        // Gérer la copie du lien
        const copyButtons = document.querySelectorAll('.copy-link-btn');
        copyButtons.forEach(button => {
            button.addEventListener('click', function() {
                const wishlistId = this.getAttribute('data-id');
                const linkInput = document.getElementById('share-link-' + wishlistId);
                
                // Sélectionner le texte
                linkInput.select();
                linkInput.setSelectionRange(0, 99999); // Pour mobile
                
                // Copier le texte
                navigator.clipboard.writeText(linkInput.value)
                    .then(() => {
                        // Indiquer que le lien a été copié
                        const originalText = this.textContent;
                        this.textContent = 'Copié !';
                        
                        // Rétablir le texte original après 2 secondes
                        setTimeout(() => {
                            this.textContent = originalText;
                        }, 2000);
                    })
                    .catch(err => {
                        console.error('Erreur lors de la copie: ', err);
                    });
            });
        });
    });
</script>
{% endblock %}